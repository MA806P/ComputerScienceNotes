给定一个只包含 '(' 和 ')' 的字符串，找出最长的包含有效括号的子串的长度。

示例 1:
输入: "(()"
输出: 2
解释: 最长有效括号子串为 "()"


示例 2:
输入: ")()())"
输出: 4
解释: 最长有效括号子串为 "()()"


注意连续最长有效括号，中间有不符合的，会重新计算






动态规划方法
计算 dp[i]，以(结尾的，最后一个dp[i]一定为0。所有只要考虑结尾是)的情况，这时有两种情况
1、...()，s[i-1]=( s[i]=)
dp[i] = dp[i-2] + 2。 这两个括号前面已有的长度 + 当前有效括号长度2

2、...))
dp[i] = dp[i-1] + dp[i - dp[i-1] - 2] + 2。前面的）+ 这两个))匹配的前面的((前面的dp.
画个图 举个例子 就理解了
 0 1 2 3 4 5 6 7 8
（ )（ （ ( ) ) ) )
 0 2 0 0 0 2 4 8 10
dp[5] = dp[4]+dp[5-0-2]+2 = 0 + 0 + 2 = 2
dp[6] = dp[5]+dp[6-2-2]+2 = 2 + 0 + 2 = 4
dp[7] = dp[6]+dp[7-4-2]+2 = 4 + 2 + 2 = 8
dp[8] = dp[7]+dp[8-8-2]+2 = 8 + 0 + 2 = 10



