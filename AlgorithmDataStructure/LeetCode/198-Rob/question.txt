
198. 打家劫舍

你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。
给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。

示例 1：
输入：[1,2,3,1]
输出：4
解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。
     偷窃到的最高金额 = 1 + 3 = 4 。
示例 2：
输入：[2,7,9,3,1]
输出：12
解释：偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。
     偷窃到的最高金额 = 2 + 9 + 1 = 12 。

提示：
0 <= nums.length <= 100
0 <= nums[i] <= 400







注意不一定是，隔一个，也可能隔好几个累加的值最大
[2,1,1,2] 最大 = 2 + 2


动态规划

 遍历，计算偷与不偷的两种情况，比较大小累加
  不偷 = 上家累计值
  偷 =  上上家累计值+当前家值
  结果 =  max(不偷，偷)
  下一次循环更新值，上家累计值=结果
 
      2   1     1       2
 偷        1    2+1    2+2
 不        2      2      3    4  = sum1
 =         2      3      4        = sum2
 
      2   7   9       3     1
 偷        7  2+9    7+3    11+1
 不        2   7      11     11
 =         7   11     11    12




