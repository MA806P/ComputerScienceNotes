
53-最大子序和
给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:
输入: [-2,1,-3,4,-1,2,1,-5,4],
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。





方法一，暴力解法
寻找所有可能的子序和，求得最大值。
[-2] [-2,1] [-2,1,-3]...
[1] [1,-3] [1,-3,4]...
...
时间复杂度O(n^2) 空间复杂度O(1)



方法二，动态规划法
dp[i] 表示 nums 中 0到i 的最大子序和
dp[0]=nums[0]
dp[i]=max(dp[i-1]+nums[i], nums[i]) 
示例：
nums[] = [-2,1,-3,4,-1,2,1,-5,4]
dp[]   = [-2,1,-2,4,3,5,6,1,5] 最大值为 6
6是怎么来的，dp[6] = 6 = max(5+1,1) = 5+1 = ... = 4-1+2+1;
时间复杂度O(n) 空间复杂度O(n)可优化至O(1)



方法三，贪心算法
一个个数字加过去得sum，如 sum<0 放弃前面的重新开始继续依次加下去，比较记录下最大值，就是最后的结果
示例：
nums[] = [-2,1,-3,4,-1,2,1,-5,4]
sum    =  -2 1 -2 4  3 5 6  1 5  
max    =  -2 1  1 4  4 5 6  6 6
时间复杂度O(n) 空间复杂度O(1)



方法四，分治法





