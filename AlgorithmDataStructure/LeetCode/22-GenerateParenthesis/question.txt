给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。
n = 0
[ "" ]

n = 1
[ "()" ]

n = 2
[
  "(())",
  "()()"
]

n = 3
[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]

动态规划
动态规划思想类似于数学归纳法，已知 i < n 的所有情况，可通过某种算法算出 i = n 的情况。
本题考虑，i = n 在 n - 1 的基础上增加一组括号的位置。
可考虑整个括号排列中最左端，最左端一定是（，现在就是要确定对应的 ）的位置：
（ + “i=p时所有括号的排列组合” + ）+ “i=q时所有括号的排列组合”
p+q=n-1，p q为非负整数。 遍历 p=0~n-1 q=n-1~0, 所有情况就遍历完了。
这样遍历没有重复的情况出现

举例，当 n = 3 时：
( + p=0 + ) + q=2 = ( + "" + ) + "(())" => ()(())
		  = ( + "" + ) + "()()" => ()()()
( + p=1 + ) + q=1 = ( + "()" + ) + "()" => (())()
( + p=2 + ) + q=0 = ( + "(())" + ) + "" => ((()))
		  = ( + "()()" + ) + "" => (()())

