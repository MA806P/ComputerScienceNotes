945. 使数组唯一的最小增量

给定整数数组 A，每次 move 操作将会选择任意 A[i]，并将其递增 1。
返回使 A 中的每个值都是唯一的最少操作次数。

示例 1:
输入：[1,2,2]
输出：1
解释：经过一次 move 操作，数组将变为 [1, 2, 3]。


示例 2:
输入：[3,2,1,2,1,7]
输出：6
解释：经过 6 次 move 操作，数组将变为 [3, 4, 1, 2, 5, 7]。
可以看出 5 次或 5 次以下的 move 操作是不能让数组的每个值唯一的。


提示：
0 <= A.length <= 40000
0 <= A[i] < 40000




方法一
用一个数组长度 80000（0 <= A.length <= 40000）* 2 ，来存放数字出现的次数。
为啥是 80000，因为最坏情况下，A 有 40000 个 40000，需要将递增为[40000,40001,...,49999]
然后计算
例如当数组 A 为 [1, 1, 1, 1, 3, 5] 时，我们发现有 3 个重复的 1，且没有出现过 2，4 和 6，
因此一共需要进行 (2 + 4 + 6) - (1 + 1 + 1) = 9 次操作。



方法二
排序，需要修改数组，然后当前值=前一个加一，然后次数 += A[i-1]-A[i]+1
[5,5,5,6,6]
[5,6,5,6,6] 1        5-5+1=1
[5,6,7,6,6] 1+2      6-5+1=2
[5,6,7,8,6] 1+2+2    7-6+1=2
[5,6,7,8,9] 1+2+2+3  8-6+1=3


方法三
先排序，再计算，见官方解题
https://leetcode-cn.com/problems/minimum-increment-to-make-array-unique/solution/shi-shu-zu-wei-yi-de-zui-xiao-zeng-liang-by-leet-2/




