

72. 编辑距离
给你两个单词 word1 和 word2，请你计算出将 word1 转换成 word2 所使用的最少操作数 。

你可以对一个单词进行如下三种操作：
插入一个字符
删除一个字符
替换一个字符
 

示例 1：
输入：word1 = "horse", word2 = "ros"
输出：3
解释：
horse -> rorse (将 'h' 替换为 'r')
rorse -> rose (删除 'r')
rose -> ros (删除 'e')


示例 2：
输入：word1 = "intention", word2 = "execution"
输出：5
解释：
intention -> inention (删除 't')
inention -> enention (将 'i' 替换为 'e')
enention -> exention (将 'n' 替换为 'x')
exention -> exection (将 'n' 替换为 'c')
exection -> execution (插入 'u')




本质不同的操作实际上只有三种：
在单词 A 中插入一个字符； == 在单词 B 中删除一个字符
在单词 B 中插入一个字符；== 在单词 A 中删除一个字符
修改单词 A 的一个字符。 == 修改单词 B 中的一个字符




 dp[i][j] 代表 word1 到 i 位置转换成 word2 到 j 位置需要最少步数
 所以，
 当 word1[i] == word2[j]，dp[i][j] = dp[i-1][j-1]；
 当 word1[i] != word2[j]，dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1]) + 1
 其中，dp[i-1][j-1] 表示替换操作，dp[i-1][j] 表示删除操作，dp[i][j-1] 表示插入操作。



